===================
AST_Node {
  end: 
   AST_Token {
     raw: undefined,
     file: '0',
     comments_before: [ [AST_Token] ],
     nlb: true,
     endpos: 890,
     endcol: 1,
     endline: 26,
     pos: 889,
     col: 0,
     line: 26,
     value: '}',
     type: 'punc' },
  start: 
   AST_Token {
     raw: undefined,
     file: '0',
     comments_before: [],
     nlb: true,
     endpos: 366,
     endcol: 8,
     endline: 9,
     pos: 358,
     col: 0,
     line: 9,
     value: 'function',
     type: 'keyword' },
  body: 
   [ AST_Node {
       end: [AST_Token],
       start: [AST_Token],
       definitions: [Array],
       _squeezed: true,
       _optimized: true },
     AST_Node {
       end: [AST_Token],
       start: [AST_Token],
       body: [AST_Node],
       object: [AST_Node],
       name: [AST_Node],
       init: [AST_Node],
       _squeezed: true,
       _optimized: true },
     AST_Node {
       end: [AST_Token],
       start: [AST_Token],
       value: [AST_Node],
       _squeezed: true,
       _optimized: true } ],
  cname: -1,
  enclosed: 
   [ { name: 'document',
       orig: [Array],
       eliminated: 0,
       scope: [AST_Node],
       references: [Array],
       replaced: 0,
       global: true,
       mangled_name: null,
       undeclared: true,
       id: 757,
       direct_access: true,
       escaped: true,
       fixed: false,
       should_replace: undefined,
       single_use: undefined },
     { name: 'transEndEventNames',
       orig: [Array],
       eliminated: 0,
       scope: [Circular],
       references: [Array],
       replaced: 0,
       global: false,
       mangled_name: null,
       undeclared: false,
       id: 8,
       direct_access: true,
       escaped: true,
       fixed: [Function],
       should_replace: false,
       single_use: false },
     { name: 'el',
       orig: [Array],
       eliminated: 0,
       scope: [Circular],
       references: [Array],
       replaced: 0,
       global: false,
       mangled_name: null,
       undeclared: false,
       id: 7,
       direct_access: true,
       escaped: false,
       fixed: [Function],
       should_replace: false,
       single_use: false },
     { name: 'name',
       orig: [Array],
       eliminated: 0,
       scope: [Circular],
       references: [Array],
       replaced: 0,
       global: false,
       mangled_name: null,
       undeclared: false,
       id: 9,
       direct_access: true,
       escaped: false,
       fixed: false,
       should_replace: undefined,
       single_use: undefined },
     { name: 'undefined',
       orig: [Array],
       eliminated: 0,
       scope: [AST_Node],
       references: [Array],
       replaced: 0,
       global: true,
       mangled_name: null,
       undeclared: true,
       id: 758,
       direct_access: true,
       escaped: false,
       fixed: false,
       should_replace: undefined,
       single_use: undefined } ],
  parent_scope: 
   AST_Node {
     end: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: true,
        endpos: 84049,
        endcol: 1,
        endline: 2704,
        pos: 84048,
        col: 0,
        line: 2704,
        value: '}',
        type: 'punc' },
     start: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: false,
        endpos: 8,
        endcol: 8,
        endline: 1,
        pos: 0,
        col: 0,
        line: 1,
        value: 'function',
        type: 'keyword' },
     body: 
      [ [AST_Node],
        [Circular],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node] ],
     cname: -1,
     enclosed: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     parent_scope: null,
     uses_eval: false,
     uses_with: false,
     functions: { _values: [Object], _size: 41 },
     variables: { _values: [Object], _size: 77 },
     globals: { _values: [Object], _size: 46 },
     _squeezed: true,
     _optimized: true },
  uses_eval: false,
  uses_with: false,
  functions: { _values: {}, _size: 0 },
  variables: 
   { _values: 
      { '$arguments': [Object],
        '$el': [Object],
        '$transEndEventNames': [Object],
        '$name': [Object] },
     _size: 4 },
  uses_arguments: false,
  argnames: [],
  name: 
   AST_Node {
     end: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: false,
        endpos: 380,
        endcol: 22,
        endline: 9,
        pos: 367,
        col: 9,
        line: 9,
        value: 'transitionEnd',
        type: 'name' },
     start: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: false,
        endpos: 380,
        endcol: 22,
        endline: 9,
        pos: 367,
        col: 9,
        line: 9,
        value: 'transitionEnd',
        type: 'name' },
     thedef: 
      { name: 'transitionEnd',
        orig: [Array],
        eliminated: 0,
        scope: [AST_Node],
        references: [Array],
        replaced: 0,
        global: true,
        mangled_name: null,
        undeclared: false,
        id: 6,
        direct_access: true,
        escaped: false,
        fixed: false,
        should_replace: undefined,
        single_use: undefined },
     name: 'transitionEnd',
     scope: 
      AST_Node {
        end: [AST_Token],
        start: [AST_Token],
        body: [Array],
        cname: -1,
        enclosed: [Array],
        parent_scope: null,
        uses_eval: false,
        uses_with: false,
        functions: [Object],
        variables: [Object],
        globals: [Object],
        _squeezed: true,
        _optimized: true },
     init: undefined,
     _squeezed: true,
     _optimized: true },
  inlined: false,
  _squeezed: true,
  _optimized: true }
/===================
===================
AST_Node {
  end: 
   AST_Token {
     raw: undefined,
     file: '0',
     comments_before: [ [AST_Token] ],
     nlb: true,
     endpos: 890,
     endcol: 1,
     endline: 26,
     pos: 889,
     col: 0,
     line: 26,
     value: '}',
     type: 'punc' },
  start: 
   AST_Token {
     raw: undefined,
     file: '0',
     comments_before: [],
     nlb: true,
     endpos: 366,
     endcol: 8,
     endline: 9,
     pos: 358,
     col: 0,
     line: 9,
     value: 'function',
     type: 'keyword' },
  body: 
   [ AST_Node {
       end: [AST_Token],
       start: [AST_Token],
       definitions: [Array],
       _squeezed: true,
       _optimized: true },
     AST_Node {
       end: [AST_Token],
       start: [AST_Token],
       body: [AST_Node],
       object: [AST_Node],
       name: [AST_Node],
       init: [AST_Node],
       _squeezed: true,
       _optimized: true },
     AST_Node {
       end: [AST_Token],
       start: [AST_Token],
       value: [AST_Node],
       _squeezed: true,
       _optimized: true } ],
  cname: -1,
  enclosed: 
   [ { name: 'document',
       orig: [Array],
       eliminated: 0,
       scope: [AST_Node],
       references: [Array],
       replaced: 0,
       global: true,
       mangled_name: null,
       undeclared: true,
       id: 757,
       direct_access: true,
       escaped: true,
       fixed: false,
       should_replace: undefined,
       single_use: undefined },
     { name: 'transEndEventNames',
       orig: [Array],
       eliminated: 0,
       scope: [Circular],
       references: [Array],
       replaced: 0,
       global: false,
       mangled_name: null,
       undeclared: false,
       id: 8,
       direct_access: true,
       escaped: true,
       fixed: [Function],
       should_replace: false,
       single_use: false },
     { name: 'el',
       orig: [Array],
       eliminated: 0,
       scope: [Circular],
       references: [Array],
       replaced: 0,
       global: false,
       mangled_name: null,
       undeclared: false,
       id: 7,
       direct_access: true,
       escaped: false,
       fixed: [Function],
       should_replace: false,
       single_use: false },
     { name: 'name',
       orig: [Array],
       eliminated: 0,
       scope: [Circular],
       references: [Array],
       replaced: 0,
       global: false,
       mangled_name: null,
       undeclared: false,
       id: 9,
       direct_access: true,
       escaped: false,
       fixed: false,
       should_replace: undefined,
       single_use: undefined },
     { name: 'undefined',
       orig: [Array],
       eliminated: 0,
       scope: [AST_Node],
       references: [Array],
       replaced: 0,
       global: true,
       mangled_name: null,
       undeclared: true,
       id: 758,
       direct_access: true,
       escaped: false,
       fixed: false,
       should_replace: undefined,
       single_use: undefined } ],
  parent_scope: 
   AST_Node {
     end: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: true,
        endpos: 84049,
        endcol: 1,
        endline: 2704,
        pos: 84048,
        col: 0,
        line: 2704,
        value: '}',
        type: 'punc' },
     start: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: false,
        endpos: 8,
        endcol: 8,
        endline: 1,
        pos: 0,
        col: 0,
        line: 1,
        value: 'function',
        type: 'keyword' },
     body: 
      [ [AST_Node],
        [Circular],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node],
        [AST_Node] ],
     cname: -1,
     enclosed: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     parent_scope: null,
     uses_eval: false,
     uses_with: false,
     functions: { _values: [Object], _size: 41 },
     variables: { _values: [Object], _size: 77 },
     globals: { _values: [Object], _size: 46 },
     _squeezed: true,
     _optimized: true },
  uses_eval: false,
  uses_with: false,
  functions: { _values: {}, _size: 0 },
  variables: 
   { _values: 
      { '$arguments': [Object],
        '$el': [Object],
        '$transEndEventNames': [Object],
        '$name': [Object] },
     _size: 4 },
  uses_arguments: false,
  argnames: [],
  name: 
   AST_Node {
     end: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: false,
        endpos: 380,
        endcol: 22,
        endline: 9,
        pos: 367,
        col: 9,
        line: 9,
        value: 'transitionEnd',
        type: 'name' },
     start: 
      AST_Token {
        raw: undefined,
        file: '0',
        comments_before: [],
        nlb: false,
        endpos: 380,
        endcol: 22,
        endline: 9,
        pos: 367,
        col: 9,
        line: 9,
        value: 'transitionEnd',
        type: 'name' },
     thedef: 
      { name: 'transitionEnd',
        orig: [Array],
        eliminated: 0,
        scope: [AST_Node],
        references: [Array],
        replaced: 0,
        global: true,
        mangled_name: null,
        undeclared: false,
        id: 6,
        direct_access: true,
        escaped: false,
        fixed: false,
        should_replace: undefined,
        single_use: undefined },
     name: 'transitionEnd',
     scope: 
      AST_Node {
        end: [AST_Token],
        start: [AST_Token],
        body: [Array],
        cname: -1,
        enclosed: [Array],
        parent_scope: null,
        uses_eval: false,
        uses_with: false,
        functions: [Object],
        variables: [Object],
        globals: [Object],
        _squeezed: true,
        _optimized: true },
     init: undefined,
     _squeezed: true,
     _optimized: true },
  inlined: false,
  _squeezed: true,
  _optimized: true }
/===================
